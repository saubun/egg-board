{"version":3,"sources":["components/NavBarHeader.tsx","components/Home.tsx","hooks/useLocalStorage.tsx","components/Post.tsx","components/Posts.tsx","components/App.tsx","index.js"],"names":["NavBarHeader","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","onClick","e","preventDefault","console","log","variant","Home","Container","Jumbotron","window","location","OverlayTrigger","trigger","placement","overlay","h1Popover","Popover","Title","as","Content","useLocalStorage","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","PostObject","title","text","date","moment","format","Post","post","posts","setPosts","update","setUpdate","history","useHistory","removeItem","Card","Body","Text","newPosts","filter","go","deletePost","Footer","style","fontSize","Posts","show","setShow","handleShow","handleSubmit","postTitle","target","elements","postBodyText","bodyText","uuidv4","prevArray","NewPostModal","Modal","onHide","onSubmit","autoComplete","Header","closeButton","Group","controlId","Label","Control","name","required","resize","height","length","ListGroup","map","Item","size","block","borderRadius","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"6LAGe,SAASA,IAKvB,OACC,mCACC,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACC,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,IAAnB,SACC,yCAED,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,UACC,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACC,cAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,IAAf,kBACA,cAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,sBAED,eAACQ,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACC,cAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASN,UAAU,YACxD,cAACO,EAAA,EAAD,CACCC,QAAS,SAACC,GACTA,EAAEC,iBAlBRC,QAAQC,IAAI,wCAqBPC,QAAQ,kBALT,qC,oCCbS,SAASC,IAMvB,OACC,mCACC,eAACC,EAAA,EAAD,CAAWf,UAAU,OAArB,UACC,eAACgB,EAAA,EAAD,WACC,+CACA,4FACA,4BACC,cAACT,EAAA,EAAD,CAAQC,QAXb,WACCS,OAAOC,SAASxB,KAAO,UAUamB,QAAQ,UAAxC,6BAKF,cAACM,EAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,MAAMC,QAASC,EAAzD,SACC,0DAED,2NAUJ,IAAMA,EACL,eAACC,EAAA,EAAD,CAAS1B,GAAG,gBAAZ,UACC,cAAC0B,EAAA,EAAQC,MAAT,CAAeC,GAAG,KAAlB,oBACA,eAACF,EAAA,EAAQG,QAAT,8BACiB,6CADjB,sD,iDCxCa,SAASC,EAAgBC,EAAcC,GAAM,IAAD,EAChCC,oBAAS,WAElC,IAAMC,EAAcf,OAAOgB,aAAaC,QAAQJ,GAEhD,OAAuB,OAAhBE,EAAuBG,KAAKC,MAAMJ,GAAeH,KALC,mBACnDQ,EADmD,KAC5CC,EAD4C,KAa1D,OAJAC,qBAAU,WACTtB,OAAOgB,aAAaO,QAAQV,EAAKK,KAAKM,UAAUJ,MAC9C,CAACP,EAAKO,IAEF,CAACA,EAAOC,G,WCTHI,EAGZ,WAAmBC,EAAsBC,EAAqB9C,GAAa,yBAAxD6C,QAAuD,KAAjCC,OAAiC,KAAZ9C,KAAY,KAF1E+C,KAAOC,MAASC,OAAO,0BAMjB,SAASC,EAAT,GAA8B,IAAdC,EAAa,EAAbA,KAAa,EAETrB,EAAgB,GAAI,SAFX,mBAE5BsB,EAF4B,KAErBC,EAFqB,OAKPpB,mBAAS,GALF,mBAK5BqB,EAL4B,KAKpBC,EALoB,KAO7BC,EAAUC,cAehB,OAJAhB,qBAAU,WACTN,aAAauB,WAAWP,EAAKnD,MAC3B,CAACsD,EAAQH,EAAKnD,GAAIwD,IAGpB,mCACC,eAACG,EAAA,EAAD,CAAMzD,UAAU,OAAhB,UACC,eAACyD,EAAA,EAAKC,KAAN,WACC,cAACD,EAAA,EAAKhC,MAAN,UAAawB,EAAKN,QAClB,cAACc,EAAA,EAAKE,KAAN,UAAYV,EAAKL,OACjB,cAACrC,EAAA,EAAD,CACCM,QAAQ,UACRnB,KAAI,iBAAYuD,EAAKN,OACrB3C,UAAU,OAHX,kBAOA,cAACO,EAAA,EAAD,CACCM,QAAQ,SACRL,QAAS,SAACC,GACTA,EAAEC,iBA5BW,SAACZ,GACnB,IAAM8D,EAAWV,EAAMW,QAAO,SAACZ,GAAD,OAAeA,EAAKnD,KAAOA,KACzDqD,EAASS,GACTP,EAAUD,EAAS,GACnBE,EAAQQ,GAAG,GAyBNC,CAAWd,EAAKnD,KAJlB,uBAUD,eAAC2D,EAAA,EAAKO,OAAN,CAAahE,UAAU,aAAaiE,MAAO,CAAEC,SAAU,UAAvD,uBACYjB,EAAKJ,a,4BCtDN,SAASsB,IAAS,IAAD,EACPpC,oBAAS,GADF,mBACxBqC,EADwB,KAClBC,EADkB,OAELzC,EAAgB,GAAI,SAFf,mBAExBsB,EAFwB,KAEjBC,EAFiB,KAIzBmB,EAAa,kBAAMD,GAASD,IAE5BG,EAAe,SAAC9D,GACrBA,EAAEC,iBACF,IAAM8D,EAAoB/D,EAAEgE,OAAOC,SAAS/B,MAAMN,MAC5CsC,EAAuBlE,EAAEgE,OAAOC,SAASE,SAASvC,MAClDY,EAAmB,IAAIP,EAAW8B,EAAWG,EAAcE,eACjE1B,GAAS,SAAC2B,GAAD,4BAAmBA,GAAnB,CAA8B7B,OACvCqB,KAKD,SAASS,IACR,OACC,8BACC,cAACC,EAAA,EAAD,CAAOZ,KAAMA,EAAMa,OAAQX,EAA3B,SACC,eAACpE,EAAA,EAAD,CAAMgF,SAAUX,EAAcY,aAAa,MAA3C,UACC,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACL,EAAA,EAAMvD,MAAP,4BAED,eAACuD,EAAA,EAAMtB,KAAP,WACC,eAACxD,EAAA,EAAKoF,MAAN,CAAYC,UAAU,gBAAtB,UACC,cAACrF,EAAA,EAAKsF,MAAN,oBACA,cAACtF,EAAA,EAAKuF,QAAN,CACCC,KAAK,QACLrF,KAAK,OACLC,YAAY,QACZqF,UAAQ,OAGV,eAACzF,EAAA,EAAKoF,MAAN,CAAYC,UAAU,eAAtB,UACC,cAACrF,EAAA,EAAKsF,MAAN,mBACA,cAACtF,EAAA,EAAKuF,QAAN,CACC/D,GAAG,WACHpB,YAAY,gBACZoF,KAAK,WACLC,UAAQ,EACR1B,MAAO,CAAE2B,OAAQ,OAAQC,OAAQ,iBAIpC,eAACb,EAAA,EAAMhB,OAAP,WACC,cAACzD,EAAA,EAAD,CAAQF,KAAK,SAAb,mBACA,cAACE,EAAA,EAAD,CAAQC,QAAS8D,EAAjB,8BAoBN,OACC,mCACC,eAACvD,EAAA,EAAD,CAAWf,UAAU,OAAOiE,MAAO,CAAE4B,OAAQ,SAA7C,UACmB,IAAjB3C,EAAM4C,QACN,oBAAI9F,UAAU,yBAAd,wCAdF,cAAC+F,EAAA,EAAD,CAAWlF,QAAQ,QAAnB,SACEqC,EAAM8C,KAAI,SAAC/C,GAAD,OACV,cAAC8C,EAAA,EAAUE,KAAX,UACC,cAACjD,EAAD,CAAMC,KAAMA,KADQA,EAAKnD,SAe3B,cAACS,EAAA,EAAD,CACCM,QAAQ,UACRqF,KAAK,KACLlG,UAAU,eACVQ,QAAS8D,EACT6B,OAAK,EACLlC,MAAO,CAAEmC,aAAc,KANxB,yBAUA,cAACrB,EAAD,S,YCrFW,SAASsB,IACvB,OACC,qCACC,cAAChH,EAAD,IACA,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,IAAlB,SACC,cAACzF,EAAD,MAED,cAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,SAAlB,SACC,cAACpC,EAAD,c,MCXNqC,IAASC,OAAO,cAACJ,EAAD,IAASK,SAASC,eAAe,W","file":"static/js/main.412d9a6e.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, FormControl, Nav, Navbar } from 'react-bootstrap';\n\nexport default function NavBarHeader() {\n\t// Make this filter all posts by name\n\tconst searchHandler = () =>\n\t\tconsole.log('This feature is not yet implemented');\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<h3>Hello</h3>\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/posts\">Posts</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Form inline>\n\t\t\t\t\t\t<FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tsearchHandler();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"outline-success\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch Posts\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport {\n\tContainer,\n\tJumbotron,\n\tButton,\n\tPopover,\n\tOverlayTrigger,\n} from 'react-bootstrap';\n\nexport default function Home() {\n\t// Act as a link to posts url\n\tfunction buttonHandler() {\n\t\twindow.location.href = '/posts';\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Container className=\"mt-3\">\n\t\t\t\t<Jumbotron>\n\t\t\t\t\t<h1>Hello, World!</h1>\n\t\t\t\t\t<p>Welcome to my simple social media website! Have a nice day!</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Button onClick={buttonHandler} variant=\"primary\">\n\t\t\t\t\t\t\tSee posts!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</p>\n\t\t\t\t</Jumbotron>\n\t\t\t\t<OverlayTrigger trigger=\"click\" placement=\"top\" overlay={h1Popover}>\n\t\t\t\t\t<h2>What is this site for?</h2>\n\t\t\t\t</OverlayTrigger>\n\t\t\t\t<p>\n\t\t\t\t\tThis is simply my own social media site made with React and\n\t\t\t\t\tTypescript. I wont be posting much here, as this website is not for\n\t\t\t\t\tpractical purposes, but rather for learning purposes.\n\t\t\t\t</p>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nconst h1Popover = (\n\t<Popover id=\"popover-basic\">\n\t\t<Popover.Title as=\"h3\">Secret</Popover.Title>\n\t\t<Popover.Content>\n\t\t\tAnd here's some <strong>amazing</strong> content. Cool that you found\n\t\t\tthis, right? :3\n\t\t</Popover.Content>\n\t</Popover>\n);\n","import { useEffect, useState } from 'react';\n\n// Custom react hook to save state in local storage\nexport default function useLocalStorage(defaultValue, key) {\n\tconst [value, setValue] = useState(() => {\n\t\t// State \"sticks\" through local storage memory\n\t\tconst stickyValue = window.localStorage.getItem(key);\n\n\t\treturn stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n\t});\n\n\t// Update local storage on change\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t}, [key, value]);\n\n\treturn [value, setValue];\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useHistory } from 'react-router';\n\n// Class object to create new posts\nexport class PostObject {\n\tdate = moment().format('YYYY-MM-DD hh:mm:ss A');\n\n\tconstructor(public title: string, public text: string, public id: number) {}\n}\n\n// Display posts\nexport function Post({ post }: any) {\n\t// Get posts array\n\tconst [posts, setPosts] = useLocalStorage([], 'posts');\n\n\t// Increment this when array data is removed so useeEffect knows when to run\n\tconst [update, setUpdate] = useState(0);\n\n\tconst history = useHistory();\n\n\t// Remove item from posts array\n\tconst deletePost = (id: any) => {\n\t\tconst newPosts = posts.filter((post: any) => post.id !== id);\n\t\tsetPosts(newPosts);\n\t\tsetUpdate(update + 1);\n\t\thistory.go(0); // Refresh page because i cant find a better way\n\t};\n\n\t// Remove post from local storage on posts array change\n\tuseEffect(() => {\n\t\tlocalStorage.removeItem(post.id);\n\t}, [update, post.id, history]);\n\n\treturn (\n\t\t<>\n\t\t\t<Card className=\"mb-2\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>{post.title}</Card.Title>\n\t\t\t\t\t<Card.Text>{post.text}</Card.Text>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\thref={`/posts/${post.title}`}\n\t\t\t\t\t\tclassName=\"mr-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\tRead\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button<any>\n\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tdeletePost(post.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t\t<Card.Footer className=\"text-muted\" style={{ fontSize: '0.8rem' }}>\n\t\t\t\t\tPosted on {post.date}\n\t\t\t\t</Card.Footer>\n\t\t\t</Card>\n\t\t</>\n\t);\n}\n","import React, { useState } from 'react';\nimport { Post, PostObject } from './Post';\nimport { Button, Container, Modal, Form, ListGroup } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nexport default function Posts() {\n\tconst [show, setShow] = useState(false);\n\tconst [posts, setPosts] = useLocalStorage([], 'posts');\n\n\tconst handleShow = () => setShow(!show);\n\n\tconst handleSubmit = (e: any) => {\n\t\te.preventDefault();\n\t\tconst postTitle: string = e.target.elements.title.value;\n\t\tconst postBodyText: string = e.target.elements.bodyText.value;\n\t\tconst post: PostObject = new PostObject(postTitle, postBodyText, uuidv4());\n\t\tsetPosts((prevArray) => [...prevArray, post]);\n\t\thandleShow();\n\t};\n\n\t// Rerenders posts when the array changes\n\n\tfunction NewPostModal() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Modal show={show} onHide={handleShow}>\n\t\t\t\t\t<Form onSubmit={handleSubmit} autoComplete=\"off\">\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title>Create Post</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t<Form.Group controlId=\"formPostTitle\">\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group controlId=\"formPostText\">\n\t\t\t\t\t\t\t\t<Form.Label>Body</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Input text...\"\n\t\t\t\t\t\t\t\t\tname=\"bodyText\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tstyle={{ resize: 'none', height: '10rem' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button type=\"submit\">Post!</Button>\n\t\t\t\t\t\t\t<Button onClick={handleShow}>Cancel</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet displayPosts = () => {\n\t\treturn (\n\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t{posts.map((post: any) => (\n\t\t\t\t\t<ListGroup.Item key={post.id}>\n\t\t\t\t\t\t<Post post={post} />\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t))}\n\t\t\t</ListGroup>\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Container className=\"mt-3\" style={{ height: '100vh' }}>\n\t\t\t\t{posts.length === 0 && (\n\t\t\t\t\t<h4 className=\"text-center text-muted\">There are no posts to show</h4>\n\t\t\t\t)}\n\t\t\t\t{displayPosts()}\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\tclassName=\"fixed-bottom\"\n\t\t\t\t\tonClick={handleShow}\n\t\t\t\t\tblock\n\t\t\t\t\tstyle={{ borderRadius: '0' }}\n\t\t\t\t>\n\t\t\t\t\tCreate Post\n\t\t\t\t</Button>\n\t\t\t\t<NewPostModal />\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport NavBarHeader from './NavBarHeader';\nimport Home from './Home';\nimport Posts from './Posts';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\n\nexport default function App() {\n\treturn (\n\t\t<>\n\t\t\t<NavBarHeader />\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/posts\">\n\t\t\t\t\t\t<Posts />\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/* <Route exact path={`/posts/${id}`}>\n\t\t\t\t\t\t<p/>\n\t\t\t\t\t</Route> */}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}